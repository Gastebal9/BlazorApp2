@page "/NewPage"

@using MySql.Data
@using BlazorApp2.Models
@using DataLibrary
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config

<h3>NewPage</h3>
<button class="btn btn-primary" @onclick="SearchData">Search</button>
<input @bind="in1" />
<button class="btn btn-primary" @onclick="ResetSearch" style="background-color: gray;">Reset</button>
<br>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>
<input @bind="del">
<br>
<br>
<h1>Insert Data :</h1>

<label>Name</label>
<input @bind="Name" />

<label>Surname</label>
<input @bind="Surname" />

<label>ID</label>
<input @bind="ID" />

<label>Email</label>
<input @bind="Email" />

<button class="btn btn-primary" @onclick="InsertData">Insert</button>
@* <a href="" class="reload" @onclick="InsertData">Insert</a>*@


@if (InfoList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Surname</th>
            <th>ID</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in InfoList)
            {
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Surname</td>
                    <td>@p.ID</td>
                    <td>@p.Email</td>
                </tr>
            }
        </tbody>
    </table>
}




@code {
    public string in1;
    List<InfoModel> InfoList;
    public string del;

    public string Name ="";
    public string Surname="";
    public string ID="";
    public string Email="";
    public bool isPostBack = false;

    private async Task SearchData()
    {

        string sql = "select * from Table1 where Name= @in1";
        InfoList = await _data.LoadData<InfoModel, dynamic>(sql, new { in1 = @in1 }, _config.GetConnectionString("default"));
        isPostBack = true;



    }
    public async Task InsertData()
    {
        string sql = "Insert into Table1(Name,Surname,ID,Email) values(@Name,@Surname,@ID,@Email)";
        await _data.SaveData(sql, new { Name = @Name, Surname = @Surname, ID = @ID, Email = @Email },
        _config.GetConnectionString("default"));
        //_nav.NavigateTo("/Newpage");
    }

    protected override async Task OnInitializedAsync()
    {
        if (!isPostBack)
        {
            string sql2 = "select * from Table1";
            InfoList = await _data.LoadData<InfoModel, dynamic>(sql2, new { }, _config.GetConnectionString("default"));
        }
        else
        {
            string sql = "select * from Table1 where Name= @in1";
            InfoList = await _data.LoadData<InfoModel, dynamic>(sql, new { in1 = @in1 }, _config.GetConnectionString("default"));

        }

    }

    public async Task ResetSearch()
    {
        string sql2 = "select * from Table1";
        InfoList = await _data.LoadData<InfoModel, dynamic>(sql2, new { }, _config.GetConnectionString("default"));
        in1 = "";

    }

    public async Task DeleteData()
    {
        string sql = "delete from Table1 where Name = @del";
        await _data.SaveData(sql, new { del = @del }, _config.GetConnectionString("default"));

    }

    public async Task NoDelete()
    {
        Name = "";
        Surname = "";
        ID = "";
        Email = "";
        await OnInitializedAsync();
    }
}
